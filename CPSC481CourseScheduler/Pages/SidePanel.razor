@page "/side-panel"
 

<div class="panel-container">
    <div class="side-panel">
        <div class="tab-bar">
            <button class="tab-button left-tab-button @(tab1 ? "active-tab" : "")" @onclick="x=>ActiveTab(1)">
               Selected Courses
            </button>
            <button class="tab-button right-tab-button @(tab2 ? "active-tab" : "")" @onclick="x=>ActiveTab(2)">
              Bookmarks
            </button>
        </div>
        @if (tab1)
        {
            <div class="tab-content">
                @foreach (var course in courses)
                {
                        <div class="card border-secondary">
                            <div class="card-header " style="font-size:bold; background-color:#ffd66c;">
                                <div class="container-fluid" style="padding:0">
                                    <div class="row">
                                        <div class="col-auto course-code">
                                        @course.CourseCode

                                        </div>
                                        <div class="col-auto">
                                        @course.CourseName
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body" style="padding-bottom:0">
                                <p class="card-text" style="text-align:left">
                                    <div class="container-fluid" style="padding:0" >
                                        <div class="row">
                                            <div class="col-6" style="margin-bottom:1%">
                                                <b>Section: </b>@course.LectureNumber
                                            </div>
                        
                                            <div class="col-6" style="margin-bottom:1%">
                                                <b>Instructor: </b>@course.InstructorName
                                            </div>
                                            <div class="col-6" style="margin-bottom:1%">
                                                <b>Timings:</b> @course.Days @course.CourseTime
                                            </div>
                                            <div class="col-6">
                                                <b>Location: </b>@course.LectureLocation
                                            </div>

                                            <div class="col-6">
                                                <b>Seats: </b>@course.Seats
                                            </div>
                                        <div class="col-6">
                                            <b>Status:  </b>@if (course.Status == "Enrolled")
                                            {
                                                <p style="display:inline-block"><span class="dot-green"></span> Enrolled</p>
                                            }
                                            @if (course.Status == "Not-Enrolled")
                                            {
                                                <p style="display:inline-block"><span class="dot-grey"></span> Not-Enrolled</p>
                                            }

                                            @if (course.Status == "Waitlisted")
                                            {
                                                <p style="display:inline-block"><span class="dot-blue"></span> Waitlisted</p>
                                            }

                                        </div>
                                        <div class="action-buttons-container">
                                            <button title="Click to see campus location on map" type="button" class="util-button-1" @onclick="@(() => MapModal(@course.Map, @course.LectureLocation))">
                                                Show Location
                                            </button>
                                            <div class="space"></div>
                                            <button class="util-button-1" title="Remove course from selected courses"><span class="oi oi-trash" aria-hidden="true"></span></button>
                                        </div>
                                        </div>
                                    </div>
                                </p>
                            </div>
                        </div>
                }
            </div>
        }
        @if (tab2)
        {
          <div class="tab-content">
                    @foreach (var course in BookmarkedCourses)
                    {
                                <CourseCardBasic CourseName="@course.CourseName" CourseCode="@course.CourseCode" Description="@course.Description" Prereq="@course.prereq" showBookmarkButton="true" showSelectCourseButton="true" bookmarked="true"></CourseCardBasic>
                
                    }
          </div>
        }
    </div>
    
</div>

<style>
    .action-buttons-container {
        display: flex;
        height: fit-content;
    }
    .space {
        width: 1rem;
        margin: auto;
    }

    .oi-bin {
        background-color: white;
    }
    .course-code {
        font-weight: bold;
    }
    .panel-container {
        display: flex;
        justify-content: center;
        height: 100%;
        padding-top: 2rem;
    }

    .active-tab {
        background-color: white !important;
    }

    .side-panel {
        background-color: white;
        border-radius: 5px;
        width: 100%;
        margin: 0 1rem 1rem 1rem;
        border: 2px solid orange;
        
    }

    .tab-bar {
        display: flex;
        flex-direction: row;
        background-color: orange;
    }

    .tab-button {
        background-color: orange;
        border: none;
        padding: 10px;
        width: 100%;
        font-weight: bold;
        font-size: 14px;
    }
    .left-tab-button {
        border-radius: 5px 0 0 0;
    }

    .right-tab-button {
        border-radius: 0 5px 0 0;
    }

    .tab-content {
        padding: 1rem;
        max-height: calc(100% - 4rem);
        overflow: auto;
    }

    .card {
        padding: 10px;
        margin-bottom: 10px;
        background-color: white;
    }

    .dot-green {
        height: 10px;
        width: 10px;
        background-color: green;
        border-radius: 50%;
        display: inline-block;
    }

    .dot-grey {
        height: 10px;
        width: 10px;
        background-color: grey;
        border-radius: 50%;
        display: inline-block;
    }

    .dot-blue {
        height: 10px;
        width: 10px;
        background-color: deepskyblue;
        border-radius: 50%;
        display: inline-block;
    }
</style>

@code {
    private bool tab1 = true;
    private bool tab2 = false;

    private List<BasicCourse> BookmarkedCourses;
    private List<SelectCourse> courses;

    public void ActiveTab(int TabNumber)
    {
        switch (TabNumber)
        {
            case 1:
                this.tab1 = true;
                this.tab2 = false;
                break;
            case 2:
                this.tab1 = false;
                this.tab2 = true;
                break;
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        BookmarkedCourses = new List<BasicCourse> {
            new BasicCourse
            {
                CourseName = "Discrete Mathematics ",
                CourseCode = "MATH 271",
                Description = "An introduction to proof techniques and abstract mathematical reasoning: sets, relations and functions; mathematical induction; integers, primes, divisibility and modular arithmetic; counting and combinatorics; elements of probability, discrete random variables and Bayes' theorem."
            },
            new BasicCourse
            {
                CourseName = "Principles of Software Design",
                CourseCode = "ENSF 480",
                Description = "Brief overview of typical software development lifecycles. Systematic methods for designing large-scale, quality software. Concepts such as abstraction, modularity, and software modelling will be covered. Designing for non-functional properties of software will be introduced. Emphasis on individual skills."

            }
        };

        courses = new List<SelectCourse>
        {
            new SelectCourse
            {
                CourseName = "Introduction to Sociology",
                CourseCode = "SOCI 201",
                LectureLocation = "ST 140",
                LectureNumber = "Lec 01",
                InstructorName = "Dr Ehud Sharlin",
                Days = "MWF",
                CourseTime = "10:00 - 10:50",
                Seats = "45/90",
                Map = "/MapImages/ST.png",
                Status = "Enrolled"
            },
            new SelectCourse
            {
                CourseName = "Design and Implementation of Database Systems",
                CourseCode = "CPSC 571",
                LectureLocation = "MS 217",
                LectureNumber = "Lec 01",
                InstructorName = "Tamer Jarada",
                Days = "TR",
                CourseTime = "14:00 - 15:15",
                Seats = "40/90",
                Map = "/MapImages/MS.png",
                Status = "Enrolled"
            },
            new SelectCourse
            {
                CourseName = "Web-Based Systems",
                CourseCode = "SENG 513",
                LectureLocation = "ICT 122",
                LectureNumber = "Lec 01",
                InstructorName = "Ahmad Nasri",
                Days = "TR",
                CourseTime = "12:30 - 13:45",
                Seats = "20/50",
                Map = "/MapImages/ICT.png",
                Status = "Not-Enrolled"
            },
            new SelectCourse
            {
                CourseName = "Introduction to Information Visualization",
                CourseCode = "CPSC 583",
                LectureLocation = "SB 148",
                LectureNumber = "Lec 01",
                InstructorName = "Emma Towlson",
                Days = "MWF",
                CourseTime = "14:00 - 14:50",
                Seats = "33/50",
                Map = "/MapImages/SB.png",
                Status = "Not-Enrolled"
            },
            new SelectCourse
            {
                CourseName = "Introduction to Dinosaurs",
                CourseCode = "GLGT 305",
                LectureLocation = "CHC 119",
                LectureNumber = "Lec 01",
                InstructorName = "Darla Zelenitsky",
                Days = "MF",
                CourseTime = "12:00 - 12:50",
                Seats = "10/100",
                Map = "/MapImages/CHC.png",
                Status = "Waitlisted"
            }
        };
    }



    [CascadingParameter] public Blazored.Modal.Services.IModalService Modal { get; set; }



    private void MapModal(string mapPath, string building)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(IndividualCourseMapModal.Building), building);
        parameters.Add(nameof(IndividualCourseMapModal.Location), mapPath);
        Modal.Show<IndividualCourseMapModal>("Course Location", parameters, options);

    }


    private ModalOptions options = new ModalOptions()
        {
            Position = ModalPosition.Middle,
            Size = Blazored.Modal.ModalSize.Large,
            HideCloseButton = true,
            DisableBackgroundCancel = true
        };


}
