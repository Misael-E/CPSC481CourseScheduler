@page "/plan"
<style>
.map-and-cards {
    display:flex;
    flex-grow: 1;
    }

<!-- toggle -->
.switch {
  position: relative;
  width: 50px;
  height: 26px;
  margin: 4px 0 .5rem 0;

}
.switch input {
    opacity:0;
    width:0;
    height:0;
}
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 20px;
  width: 20px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #ffd16b;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(20px);
  -ms-transform: translateX(20px);
  transform: translateX(20px);
}

.slider.round {
  border-radius: 26px;
}

.slider.round:before {
  border-radius: 50%;
}

.arrow {
  border: solid black;
  border-width: 0 10px 10px 0px;
  display: inline-block;
  padding: 10px;
}

.right {
  transform: rotate(-45deg);
  -webkit-transform: rotate(-45deg);
}

.left {
  transform: rotate(135deg);
  -webkit-transform: rotate(135deg);
}

    .searchform {
        display: flex;
        flex-direction: row;
        align-items: center;
        margin: auto;
        gap: 2%;
    }

    .searchform-control {
        width: 500px;
        height: 100px;
    }


    datalist {
        position: absolute;
        background-color: white;
        border: 1px solid black;
        border-radius: 0 0 5px 5px;
        border-top: none;
        font-family: sans-serif;
        width: 350px;
        padding: 5px;
        max-height: 10rem;
        overflow-y: auto
    }

    option {
        background-color: white;
        padding: 4px;
        color: blue;
        margin-bottom: 1px;
        font-size: 18px;
        cursor: pointer;
    }

      option:hover {
            background-color: lightblue;
        }

    .plan-section-container {
        display: flex;
        flex: 65%;
        flex-direction: column;
        max-height: 90vh;
        overflow: auto;
    }

    .bottom-row-container {
        display: flex;
        flex-direction: horizontal;
        justify-content: center;
    }

    .arrow-buttons-container {
        margin-left: auto;
        padding-left: 8rem;
    }

    .schedule-container {
        margin: 0 1rem 1rem 1rem;
    }

    .switch-container {
        margin-left: 1rem;
        font-size: 16px;
    }

    .finalize-button {
        margin-left: auto;
        margin-right: 1rem;
    }
    .switch-title {
        font-weight: bold;
    }
</style>

<div class="flex-row med-top-margin">
    <div class="plan-section-container">
        <form class="flex-row search-bar" onsubmit="">
                        <div>
                            <input onkeydown="@setSearchInput" role="combobox" class="search-input" list="browsers" type="text" placeholder="Search Courses" aria-label="Search">
                @if (setSearch)
                {
                                    <datalist id="browsers">
                                        <option style="font-size:30px">Cpsc 481</option>
                                        <option value="Cpsc 411">Cpsc 411 </option>
                                        <option  value="Cpsc 409">Cpsc 409 </option>
                                        <option  value="SENG 501"> SENG 501 </option>
                                        <option value="SENG 533"> SENG 533 </option>
                                    </datalist>
                }
                        </div>
                        <div>
                            <button class="util-button-1 small-margin-right" type="submit">Search</button>
                        </div>
        </form>
        <div class="switch-container">
            <div class="switch-title">Map view</div>
            <label class="switch">
                <input type="checkbox" @onclick="toggleMapViewSwitch">
                <span class="slider round"></span>
            </label>
            @toggleSwitchText
        </div>
        <div class="schedule-container">
            @if (mapView)
            {
                <Map />
            }
            else
            {
                <ScheduleTable>

                </ScheduleTable>
            }
        </div>
        <div class="bottom-row-container">
            @if (!mapView)
                {
                <div class="arrow-buttons-container">
                    <button title="Previous Schedule" class="btn btn-warning"><i class="arrow left" style="margin-top:20%"></i></button>
                    <button title="Next Schedule" class="btn btn-warning"><i class="arrow right" style="margin-top:20%"></i></button>
                </div>
                <button type="button" class="orange-button-1 finalize-button" @onclick="ShowFinalizeModal">FINALIZE SCHEDULE</button>
            }

        </div>
    </div>
    <div class=side-panel-container>
        <SidePanelPlanning></SidePanelPlanning>
    </div>
   
</div>

<Snackbar @ref="finalizeSuccessSnackBar" Color="Blazorise.Snackbar.SnackbarColor.Success">
    <SnackbarBody>
        Success!
    </SnackbarBody>
</Snackbar>


@code {
    private bool setSearch = false;
    private bool mapView = false;
    private string toggleSwitchText = "Off";

    private void setSearchInput ()
    {
        setSearch = true;
    }

    private void toggleMapViewSwitch()
    {
        mapView = !mapView;
        if (mapView) {
            toggleSwitchText = "On";
        } else
        {
            toggleSwitchText = "Off";
        }
    }

    [CascadingParameter] public Blazored.Modal.Services.IModalService Modal { get; set; }
    Snackbar? finalizeSuccessSnackBar;

    private ModalOptions options = new ModalOptions()
        {
            Position = ModalPosition.Middle,
            Size = Blazored.Modal.ModalSize.Large,
            HideCloseButton = true,
            DisableBackgroundCancel = true
        };

    private async Task ShowFinalizeModal()
    {
        var modal = Modal.Show<FinalizeScheduleModal>("Summary", options);
        var result = await modal.Result;

        if (result.Cancelled)
        {
            Console.WriteLine("Cancelled");
        } else if (result.Confirmed)
        {
            Console.WriteLine("Modal was closed");
            await finalizeSuccessSnackBar.Show();
        }
    }
}
