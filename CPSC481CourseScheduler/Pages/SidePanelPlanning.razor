@page "/side-panel-planning"
  
<div class="side-panel">
  <div class="tab">
    <div class="row">
      <div class="col-6">
        <button class="top-button" style="@(tab1?" background-color:#ffd16b;":"")" @onclick="x=>ActiveTab(1)">
          <h5 style="font-size:1vw"> Selected Courses </h5>
        </button>
      </div>
      <div class="col-6">
        <button class="top-button" style="@(tab2?" background-color:#ffd16b;":"")" @onclick="x=>ActiveTab(2)">
          <h5 style="font-size:1vw"> Bookmarks </h5>
        </button>
      </div>
    </div>
  </div>

    @if (tab1)
    {
        <div class="tab-content">
            @foreach (var course in courses)
            {
                
                <div class="card border-secondary">
                    <div class="card-header " style="background-color:#DC7633;">
                        <div class="container-fluid" style="padding:0">
                            <div class="row">
                                <div class="col-auto">
                                    @course.CourseCode
                                </div>
                                <div class="col-auto">
                                    @course.CourseName
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text" style="text-align:left; font-size:small">
                            <div class="container-fluid" style="padding:0;" >
                                <div class="row">
                                    <div class="col-6" style="margin-bottom:1%">
                                        <b>Section: </b>@course.LectureNumber
                                    </div>
                                    <div class="col-6" style="margin-bottom:1%">
                                        <b>Instructor: </b>@course.InstructorName
                                    </div>
                                    <div class="col-6" style="margin-bottom:1%">
                                        <b>Timings:</b> @course.Days @course.CourseTime
                                    </div>
                                    <div class="col-6" style="margin-bottom:1%">
                                        <b>Location: </b>@course.LectureLocation
                                    </div>
                                    <div class="col-6" style="margin-bottom:3%">
                                        <b>Seats: </b>@course.Seats
                                    </div>
                                    <div>
                                    <button type="button" class=" btn btn-info" @onclick="@(() => MapModal(@course.Map, @course.LectureLocation))">
                                        Show Location
                                    </button>
                                    </div>
                                </div>
                            </div>
                        </p>
                    </div>
                </div>
            }
        </div>
    }

  @if(tab2)
  {
  <div class="tab-content">
    @foreach (var course in bookmarkedCourses)
    {
        <div class="card border-secondary" >
            <div class="card-header " style="background-color:#DC7633;">
                <div class="container-fluid" style="padding:0">
                    <div class="row">
                        <div class="col-auto">
                            @course.CourseCode
                        </div>
                        <div class="col-auto">
                            @course.CourseName
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <p class="card-text" style="text-align:left; font-size:small">
                    <div class="container-fluid" style="padding:0; margin-bottom: 3%" >
                        <b>Description</b>
                        <p class="card-text"> @course.Description </p>
                    </div>
                    <button class="btn btn-info" >
                        Add to Selection
                    </button>
                </p>
            </div>
        </div>
   }
</div>
}
</div>



<style>
   .tab {
    background-color: orange;
    padding-top:10px;
    }
 .card {
    padding: 10px;
    margin-bottom: 10px;
    background-color: white;
    }
.tab button{
    background-color: orange;
    border: none;
    outline: none;
    }
.tab:hover{
    background-color: orange;
}

.tab-content {
    background-color: #ffd16b;
    padding: 10px;
    overflow-y: scroll;
    max-height: 70vh;
    display:flex;
    flex-direction: column;
    scroll-behavior: smooth;
    border: thick double #ffd16b;
}

.top-button {
    width: 100%;
}

.top-button:hover {
    background-color: #FAD7A0 ;
}

 .no-padding {
        padding: 0 3%;
  }
    
h5 {
    font-weight: bold;
    }

p 
{color: black;}
</style>

@code {
        private bool tab1 = true;
        private bool tab2 = false;

        private List<BasicCourse> bookmarkedCourses;
        private List<SelectCourse> courses;

        public void ActiveTab(int TabNumber) {
            switch(TabNumber) {
                case 1:
                    this.tab1 = true;
                    this.tab2 = false;
                    break;
                case 2:
                    this.tab1 = false;
                    this.tab2 = true;
                    break;
            }
        }

        protected override void OnInitialized() {
            base.OnInitialized();
            bookmarkedCourses = new List<BasicCourse> {
            new BasicCourse {
                CourseName = "Discrete Mathematics ",
                CourseCode = "MATH 271",
                Description = "An introduction to proof techniques and abstract mathematical reasoning: sets, relations and functions; mathematical induction; integers, primes, divisibility and modular arithmetic; counting and combinatorics; elements of probability, discrete random variables and Bayes' theorem."
             },
            new BasicCourse
            {
                CourseName = "Discrete Mathematics ",
                CourseCode = "MATH 271",
                Description = "An introduction to proof techniques and abstract mathematical reasoning: sets, relations and functions; mathematical induction; integers, primes, divisibility and modular arithmetic; counting and combinatorics; elements of probability, discrete random variables and Bayes' theorem."
            },
            new BasicCourse
            {
                CourseName = "Principles of Software Design",
                CourseCode = "ENSF 480",
                Description = "Brief overview of typical software development lifecycles. Systematic methods for designing large-scale, quality software. Concepts such as abstraction, modularity, and software modelling will be covered. Designing for non-functional properties of software will be introduced. Emphasis on individual skills."

            }
        };

            courses = new List<SelectCourse>
        {
            new SelectCourse
            {
                CourseName = "Introduction to Sociology",
                CourseCode = "SOCI 201",
                LectureLocation = "ST 140",
                LectureNumber = "Lec 01",
                InstructorName = "Dr Ehud Sharlin",
                Days = "MWF",
                CourseTime = "10:00 - 10:50",
                Seats = "45/90",
                Map = "/MapImages/ST.png"
            },
            new SelectCourse
            {
                CourseName = "Design and Implementation of Database Systems",
                CourseCode = "CPSC 571",
                LectureLocation = "MS 217",
                LectureNumber = "Lec 01",
                InstructorName = "Tamer Jarada",
                Days = "TR",
                CourseTime = "14:00 - 15:15",
                Seats = "40/90",
                Map = "/MapImages/MS.png"
            },
            new SelectCourse
            {
                CourseName = "Web-Based Systems",
                CourseCode = "SENG 513",
                LectureLocation = "ICT 122",
                LectureNumber = "Lec 01",
                InstructorName = "Ahmad Nasri",
                Days = "TR",
                CourseTime = "12:30 - 13:45",
                Seats = "20/50",
                Map = "/MapImages/ICT.png"
            },
            new SelectCourse
            {
                CourseName = "Introduction to Information Visualization",
                CourseCode = "CPSC 583",
                LectureLocation = "SB 148",
                LectureNumber = "Lec 01",
                InstructorName = "Emma Towlson",
                Days = "MWF",
                CourseTime = "14:00 - 14:50",
                Seats = "33/50",
                Map = "/MapImages/SB.png"
            },
            new SelectCourse
            {
                CourseName = "Introduction to Dinosaurs",
                CourseCode = "GLGT 305",
                LectureLocation = "CHC 119",
                LectureNumber = "Lec 01",
                InstructorName = "Darla Zelenitsky",
                Days = "MF",
                CourseTime = "12:00 - 12:50",
                Seats = "10/100",
                Map = "/MapImages/CHC.png"
            }
        };
        }


        
    [CascadingParameter] public IModalService Modal { get; set; }



    private void MapModal(string mapPath, string building) {
        var parameters = new ModalParameters();
        
        parameters.Add(nameof(IndividualCourseMapModal.Location), mapPath);
        Modal.Show<IndividualCourseMapModal>("Course Location", parameters);

    }
  

    private ModalOptions options = new ModalOptions()
        {
            Position = ModalPosition.Middle,
            Size = ModalSize.Large,
            HideCloseButton = true,
            DisableBackgroundCancel = true

            
        };


}